## Commands

This section lists command(s) run by strelkaSomatic workflow

* Running strelkaSomatic

### Main task, configuring and running Strelka2

```
	set -eo pipefail

	~{writeBed}
	~{indexFeatureFile}

	configureStrelkaSomaticWorkflow.py \
	--normalBam ~{normalBam} \
	--tumorBam ~{tumorBam} \
	--referenceFasta ~{refFasta} \
	~{regionsBedArg} \
	--runDir .

	./runWorkflow.py -m local -j ~{threads}
```

### Converting interval files to .bed

.bed files use 0-based index, we need to do a proper conversion of interval files 

```
        python3 <<CODE
        import os, re
        intervalFiles = re.split(",", "~{sep=',' intervalFiles}")
        for intervalFile in intervalFiles:
            items = re.split("\.", os.path.basename(intervalFile))
            items.pop() # remove .interval_list suffix
            bedName = ".".join(items)+".bed"
            with open(intervalFile, 'r') as inFile, open(bedName, 'w') as outFile:
                for line in inFile:
                    if not re.match("@", line): # omit the GATK header
                        fields = re.split("\t", line.strip())
                        fields[1] = str(int(fields[1]) - 1)
                        outFile.write("\t".join(fields)+"\n")
        CODE
```

### Splitting intervals

SplitIntervals is used to produce a requested number of files
to make the analysis parallel, decreasing demand for resources per chunk
and improving speed

```
	set -eo pipefail

	mkdir interval-files
	ln -s ~{refFai}
	ln -s ~{refDict}
	~{gatk} --java-options "-Xmx~{memory-8}g" SplitIntervals \
	-R ~{refFasta} \
	~{intervalsArg} \
	~{scatterArg} \
	--subdivision-mode BALANCING_WITHOUT_INTERVAL_SUBDIVISION \
	-O interval-files \
	~{splitIntervalsExtraArgs}

	cp interval-files/*.interval_list .
```

### Combining vcf files after scatter

This task uses GatherVcfs tools from GATK suite which needs the files to be ordered. 
No overlap between covered features allowed.

```
	set -eo pipefail

	~{gatk} GatherVcfs \
	-I ~{sep=" -I " vcfs} \
	-R ~{refFasta}
	-O ~{outputName}

	gzip ~{outputName}
```


### Merging the SNVs and Indels into a single file

Strelka will produce separate files for SNVs and Indels.  
Downstream processing sometimes needs these in the same file
The vcfCombine tasks combines the data and indexes the bgzipped output

```
set -eo pipefail
	
	bcftools concat -a -o ~{outputFileNamePrefix}.strelka2_all.vcf ~{vcfSnvs} ~{vcfIndels}
	bgzip ~{outputFileNamePrefix}.strelka2_all.vcf
	tabix ~{outputFileNamePrefix}.strelka2_all.vcf.gz
```

### Add in GT and AD fields

Strelka does not utilize GT or AD as part of the sample fields.
These are useful to have and sometimes required for downstream processing.
Appropriate values can be generated in a variety of ways from existing information in the INFO and Sample FIELDS
A helper python script, scripts/strelka_add_gt_ad.py, is used to create and extended.vcf file in the injectFields task

```
	set -eo pipefail
	python3 strelka_add_gt_ad.py -i ~{vcfIn} -o ~{outputFileNamePrefix}.strelka2_all.extended.vcf
	bgzip ~{outputFileNamePrefix}.strelka2_all.extended.vcf
	tabix ~{outputFileNamePrefix}.strelka2_all.extended.vcf.gz
```




